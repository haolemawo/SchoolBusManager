// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WBPlatform.DataBase_ng;

namespace WBPlatform.WebManagement.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview2-35157")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WBPlatform.Config.ServerConfigCollection+ConfigObject", b =>
                {
                    b.Property<string>("ObjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("PropContent");

                    b.Property<string>("PropName");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("ObjectId");

                    b.HasIndex("ObjectId");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("WBPlatform.TableObject.BusReport", b =>
                {
                    b.Property<string>("ObjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BusID");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("OtherData");

                    b.Property<int>("ReportType");

                    b.Property<string>("TeacherID");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("ObjectId");

                    b.HasIndex("BusID");

                    b.HasIndex("ObjectId");

                    b.HasIndex("TeacherID");

                    b.ToTable("BusReports");
                });

            modelBuilder.Entity("WBPlatform.TableObject.ClassObject", b =>
                {
                    b.Property<string>("ObjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CDepartment");

                    b.Property<string>("CGrade");

                    b.Property<string>("CNumber");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("TeacherID");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("ObjectId");

                    b.HasIndex("ObjectId");

                    b.HasIndex("TeacherID");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("WBPlatform.TableObject.NotificationObject", b =>
                {
                    b.Property<string>("ObjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Receivers");

                    b.Property<string>("SenderID");

                    b.Property<string>("Title");

                    b.Property<int>("Type");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("ObjectId");

                    b.HasIndex("ObjectId");

                    b.HasIndex("SenderID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("WBPlatform.TableObject.SchoolBusObject", b =>
                {
                    b.Property<string>("ObjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AHChecked");

                    b.Property<bool>("BigWeekOnly");

                    b.Property<string>("BusName");

                    b.Property<bool>("CSChecked");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("LSChecked");

                    b.Property<string>("TeacherID");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("ObjectId");

                    b.HasIndex("ObjectId");

                    b.HasIndex("TeacherID");

                    b.ToTable("SchoolBuses");
                });

            modelBuilder.Entity("WBPlatform.TableObject.StudentObject", b =>
                {
                    b.Property<string>("ObjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AHChecked");

                    b.Property<string>("BusID");

                    b.Property<bool>("CSChecked");

                    b.Property<string>("ClassID");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("DirectGoHome");

                    b.Property<bool>("LSChecked");

                    b.Property<string>("Sex");

                    b.Property<string>("StudentName");

                    b.Property<bool>("TakingBus");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("WeekType");

                    b.HasKey("ObjectId");

                    b.HasIndex("BusID");

                    b.HasIndex("ClassID");

                    b.HasIndex("ObjectId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WBPlatform.TableObject.UserChangeRequest", b =>
                {
                    b.Property<string>("ObjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatorID");

                    b.Property<string>("DetailTexts");

                    b.Property<string>("NewContent");

                    b.Property<int>("ProcessResultReason");

                    b.Property<int>("RequestTypes");

                    b.Property<string>("SolverID");

                    b.Property<int>("Status");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("ObjectId");

                    b.HasIndex("CreatorID");

                    b.HasIndex("ObjectId");

                    b.HasIndex("SolverID");

                    b.ToTable("ChangeRequests");
                });

            modelBuilder.Entity("WBPlatform.TableObject.UserObject", b =>
                {
                    b.Property<string>("ObjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AvatarPath");

                    b.Property<string>("Childs");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsBusManager");

                    b.Property<bool>("IsClassTeacher");

                    b.Property<bool>("IsParent");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<decimal>("Precision");

                    b.Property<string>("RealName");

                    b.Property<string>("Sex");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UserName");

                    b.Property<float>("X");

                    b.Property<float>("Y");

                    b.HasKey("ObjectId");

                    b.HasIndex("ObjectId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WBPlatform.TableObject.BusReport", b =>
                {
                    b.HasOne("WBPlatform.TableObject.SchoolBusObject", "Bus")
                        .WithMany()
                        .HasForeignKey("BusID");

                    b.HasOne("WBPlatform.TableObject.UserObject", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherID");
                });

            modelBuilder.Entity("WBPlatform.TableObject.ClassObject", b =>
                {
                    b.HasOne("WBPlatform.TableObject.UserObject", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherID");
                });

            modelBuilder.Entity("WBPlatform.TableObject.NotificationObject", b =>
                {
                    b.HasOne("WBPlatform.TableObject.UserObject", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderID");
                });

            modelBuilder.Entity("WBPlatform.TableObject.SchoolBusObject", b =>
                {
                    b.HasOne("WBPlatform.TableObject.UserObject", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherID");
                });

            modelBuilder.Entity("WBPlatform.TableObject.StudentObject", b =>
                {
                    b.HasOne("WBPlatform.TableObject.SchoolBusObject", "Bus")
                        .WithMany()
                        .HasForeignKey("BusID");

                    b.HasOne("WBPlatform.TableObject.ClassObject", "Class")
                        .WithMany()
                        .HasForeignKey("ClassID");
                });

            modelBuilder.Entity("WBPlatform.TableObject.UserChangeRequest", b =>
                {
                    b.HasOne("WBPlatform.TableObject.UserObject", "User")
                        .WithMany()
                        .HasForeignKey("CreatorID");

                    b.HasOne("WBPlatform.TableObject.UserObject", "Solver")
                        .WithMany()
                        .HasForeignKey("SolverID");
                });
#pragma warning restore 612, 618
        }
    }
}
